myIngredients=[22,1,2,3,4,5,6,7,8],ingredientList=[{id:1,name:"Lillet"},{id:2,name:"Italicus"},{id:3,name:"Campari"},{id:4,name:"Amaro Melleti"},{id:5,name:"Beirao"},{id:6,name:"Saline Solution",generic:"Salt",extra:!0},{id:7,name:"Smoke",extra:!0},{id:8,name:"Cherries",extra:!0},{id:9,name:"Iced Espresso"},{id:10,name:"Remy Martin Cognac",generic:"Brandy"},{id:11,name:"Pear Liqueur"},{id:12,name:"Fleur de Biere"},{id:13,name:"Polish Cherry Cordial",generic:"Cherry Cordial"},{id:14,name:"Clove Bitters",extra:!0},{id:15,name:"Orange Bitters",extra:!0},{id:16,name:"Nutmeg",extra:!0},{id:17,name:"Aged Rum",generic:"Rum"},{id:18,name:"Aperol"},{id:19,name:"Cherry Cordial",generic:"Cherry Cordial"},{id:20,name:"Green Chartreuse"},{id:21,name:"Laphroaig Cask Strength",generic:"Scotch"},{id:22,name:"American Gin",generic:"Gin"},{id:23,name:"British Gin",generic:"Gin"},{id:24,name:"Fernet-Branca"},{id:25,name:"Seaweed Bitters",extra:!0},{id:26,name:"Becherovka"},{id:27,name:"Dry Vermouth",generic:"Dry Vermouth"},{id:28,name:"Prosecco",generic:"Prosecco"}],cocktailList=[{id:0,name:"Hail Caesar",image:"images/hailCaesar.jpg",ingredients:[23,1,2],url:"recipes/hailCaesar.html"},{id:1,name:"Roman War Camp",image:"images/romanWarCamp.jpg",ingredients:[3,4,5,1,6,7,8]},{id:2,name:"General Dabrowski",image:"images/generalDabrowski.jpg",ingredients:[9,10,11,12,13,14,15,16]},{id:6,name:"General Dabrowski Trench Edition",image:"images/generalDabrowski.jpg",ingredients:[9,10,11,12,13,14,15,16]},{id:3,name:"Five Horsemen",image:"images/fiveHorsemen.jpg",ingredients:[17,18,19,20,21,8]},{id:4,name:"Mitchell's Court Martial",image:"images/mitchellsCourtMartial.jpg",ingredients:[22,23,20,24,25]},{id:5,name:"Operation Anthropoid",image:"images/operationAnthropoid.jpg",ingredients:[26,27,28]}];var filterManager={};function getCocktailFromId(e){for(var i=0;i<cocktailList.length;i++)if(cocktailList[i].id==e)return cocktailList[i];console.warn("Cocktail Not Found!")}filterManager.isFilterOn=!1,filterManager.isFilterMakeable=!1,filterManager.filterCocktails=(e=>{let i=!0;return filterManager.isFilterSearch&&i&&(i=filterManager.filterSearch(e)),filterManager.isFilterMakeable&&i&&(i=filterManager.filterIfMakeable(e)),i}),filterManager.toggleFilterIfMakeable=(e=>{let i=document.getElementById("filter-list-makeable");"menu"==e&&i.hasAttribute("data-mdl-disabled")||(filterManager.isFilterMakeable=!filterManager.isFilterMakeable,filterManager.isFilterMakeable?i.setAttribute("data-mdl-disabled",!0):i.removeAttribute("data-mdl-disabled"),filterManager.checkIfAnyFilters(),updateCocktailGrid())}),filterManager.filterSearch=(e=>{for(var i=0;i<filterManager.searchResults.length;i++)if(filterManager.searchResults[i]==e)return!0;return!1}),$("#search-field").on("input",function(){filterManager.searchString=$("#search-field").val(),filterManager.isFilterSearch=filterManager.searchString.length>0,filterManager.searchResults=filterManager.doSearch(filterManager.searchString),filterManager.checkIfAnyFilters(),updateCocktailGrid()}),filterManager.removeSearchFilter=(()=>{$("#search-field").val(""),$("#expandable-holder-div").removeClass("is-dirty"),filterManager.isFilterSearch=!1,filterManager.checkIfAnyFilters(),updateCocktailGrid()}),filterManager.checkIfAnyFilters=(()=>{let e=!1,i=document.getElementById("filter-chips");i.innerHTML="",i.style.display="none",filterManager.isFilterSearch&&(i.innerHTML+=filterManager.addFilterChip(`"${filterManager.searchString}"`,"filter-chip-makeable","filterManager.removeSearchFilter()"),e=!0),filterManager.isFilterMakeable&&(i.innerHTML+=filterManager.addFilterChip("Makeable Drinks","filter-chip-makeable","filterManager.toggleFilterIfMakeable('chip')"),e=!0),e&&(i.style.display="block"),filterManager.isFilterOn=e}),filterManager.filterIfMakeable=(e=>{for(var i=0;i<cocktailList.length;i++)if(cocktailList[i].id==e){for(var t=0;t<cocktailList[i].ingredients.length;t++)if(0==checkIngredientAvailable(cocktailList[i].ingredients[t])&&!getIngredient(cocktailList[i].ingredients[t]).extra)return!1;return!0}}),filterManager.doSearch=(e=>{results=[];for(var i=0;i<cocktailList.length;i++)-1!==cocktailList[i].name.toUpperCase().indexOf(e.toUpperCase())&&results.push(cocktailList[i].id);return results}),filterManager.addFilterChip=((e,i,t)=>`\n    <span class="mdl-chip mdl-chip--deletable">\n      <span class="mdl-chip__text">${e}</span>\n      <button id="${i}" type="button" class="mdl-chip__action" onclick="${t}"><i class="material-icons">cancel</i></button>\n    </span>`);let dialog=document.querySelector("dialog");function getIngredient(e){for(var i=0;i<ingredientList.length;i++)if(ingredientList[i].id==e)return ingredientList[i];console.warn("Ingredient Doesn't Exist")}function getIngredientGeneric(e){for(var i=0;i<ingredientList.length;i++)try{if(ingredientList[i].id==e)return ingredientList[i].generic}catch(e){console.debug(e)}console.debug("Generic Doesn't Exist")}function getCocktailIngredientsString(e){for(var i="",t=0;t<cocktailList.length;t++)if(cocktailList[t].id==e)for(var r=0;r<cocktailList[t].ingredients.length;r++)i+=getIngredientStdChip(cocktailList[t].ingredients[r]);return i}function getIngredientStdChip(e){var i=getIngredient(e).name;if(void 0!==i)return`\n    <span class="mdl-chip" ${getChipColor(checkIngredientAvailable(e))}>\n        <span class="mdl-chip__text">${i}</span>\n    </span>`;console.warn("Ingredient Doesn't Exist")}function toggleIngredient(e){$cocktailIngredientChip=document.getElementById(`ig-chip-${e.toString()}`);for(var i=document.querySelector("#demo-toast-example"),t=0;t<myIngredients.length;t++)if(myIngredients[t]==parseInt(e)){myIngredients.splice(t,1),$cocktailIngredientChip.outerHTML=getIngredientBtnChip(e),updateCocktailGrid(),updateIngredientChips();var r={message:`${getIngredient(e).name} removed from bar!`};return void i.MaterialSnackbar.showSnackbar(r)}myIngredients.push(e),$cocktailIngredientChip.outerHTML=$cocktailIngredientChip=getIngredientBtnChip(e),updateCocktailGrid(),updateIngredientChips();r={message:`${getIngredient(e).name} added to bar!`};i.MaterialSnackbar.showSnackbar(r)}function getIngredientBtnChip(e){var i=getIngredient(e).name;if(void 0!==i)return`\n    <button type="button" id="ig-chip-${e}" onclick="toggleIngredient(${e})" class="mdl-chip" ${getChipColor(checkIngredientAvailable(e))}>\n        <span class="mdl-chip__text">${i}</span>\n    </button>`;console.warn("Ingredient Doesn't Exist")}function getChipColor(e){switch(e){case 0:return'style="background: rgb(244, 67, 54);"';case 1:return'style="background: rgb(255, 193, 7);"';case 2:return'style="background: rgb(139, 195, 74);"'}}function checkIngredientAvailable(e){for(var i=0;i<myIngredients.length;i++)if(myIngredients[i]==e)return 2;var t=getIngredientGeneric(e);if(void 0===t)return console.debug("No Generic Available"),0;for(i=0;i<myIngredients.length;i++)if(getIngredientGeneric(myIngredients[i])==t)return console.debug(getIngredientGeneric(myIngredients[i])),1;return 0}function updateIngredientChips(){if(filterManager.isFilterOn){$cocktailIngredientChips=document.getElementById("cocktail-ingredients-chips"),$cocktailIngredientChips.innerHTML="";for(var e=0;e<ingredientList.length;e++)$cocktailIngredientChips.innerHTML+=getIngredientBtnChip(ingredientList[e].id)}}function updateCocktailGrid(){$cocktailGrid=document.getElementById("cocktail-grid"),$cocktailGrid.innerHTML="";for(var e=0;e<cocktailList.length;e++)filterManager.filterCocktails(cocktailList[e].id)&&($cocktailGrid.innerHTML+=`<div class="mdl-cell mdl-card mdl-shadow--4dp portfolio-card">\n      <div class="mdl-card__media">\n      <img class="cocktail-img" src="${cocktailList[e].image}" border="0" alt="">\n      </div>\n      <div class="mdl-card__title">\n      <h2 class="mdl-card__title-text">${cocktailList[e].name}</h2>\n      </div>\n      <div class="mdl-card__supporting-text">\n      ${getCocktailIngredientsString(e)}\n      </div>\n      <div class="mdl-card__actions mdl-card--border">\n      <a class="mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect mdl-button--accent" href="${cocktailList[e].url}">Read more</a>\n      </div>\n      </div>`)}dialog.showModal||dialogPolyfill.registerDialog(dialog),dialog.querySelector(".close").addEventListener("click",function(){dialog.close()}),filterManager.checkIfAnyFilters(),updateCocktailGrid();